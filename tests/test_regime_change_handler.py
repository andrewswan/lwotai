from labyrinth_test_case import LabyrinthTestCase
from lwotai.labyrinth import Labyrinth


class RegimeChangeHandlerTest(LabyrinthTestCase):
    """Test Regime Change"""

    def test_regime_change(self):
        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.map["United States"].posture = "Soft"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)
        govRoll = 4
        prestigeRolls = (3, 2, 5)
        app.handleRegimeChange("Afghanistan", "track", 6, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)

        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.map["United States"].posture = "Hard"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)
        govRoll = 4
        prestigeRolls = (3, 2, 5)
        app.handleRegimeChange("Afghanistan", "track", 6, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_poor())
        self.assertTrue(app.map["Afghanistan"].is_ally())
        self.assertEqual(app.map["Afghanistan"].troops(), 6)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 0)
        self.assertEqual(app.map["Afghanistan"].activeCells, 4)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 1)
        self.assertEqual(app.prestige, 5)
        self.assertEqual(app.troops, 3)

        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.map["United States"].posture = "Hard"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)
        govRoll = 5
        prestigeRolls = (3, 2, 5)
        app.handleRegimeChange("Afghanistan", "track", 6, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_fair())
        self.assertTrue(app.map["Afghanistan"].is_ally())
        self.assertEqual(app.map["Afghanistan"].troops(), 6)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 0)
        self.assertEqual(app.map["Afghanistan"].activeCells, 4)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 1)
        self.assertEqual(app.prestige, 5)
        self.assertEqual(app.troops, 3)

        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.map["United States"].posture = "Hard"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)
        govRoll = 5
        prestigeRolls = (5, 2, 5)
        app.handleRegimeChange("Afghanistan", "track", 6, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_fair())
        self.assertTrue(app.map["Afghanistan"].is_ally())
        self.assertEqual(app.map["Afghanistan"].troops(), 6)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 0)
        self.assertEqual(app.map["Afghanistan"].activeCells, 4)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 1)
        self.assertEqual(app.prestige, 9)
        self.assertEqual(app.troops, 3)

        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.map["United States"].posture = "Hard"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)
        govRoll = 5
        prestigeRolls = (2, 6, 5)
        app.handleRegimeChange("Afghanistan", "track", 6, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_fair())
        self.assertTrue(app.map["Afghanistan"].is_ally())
        self.assertEqual(app.map["Afghanistan"].troops(), 6)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 0)
        self.assertEqual(app.map["Afghanistan"].activeCells, 4)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 1)
        self.assertEqual(app.prestige, 2)
        self.assertEqual(app.troops, 3)

        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.map["United States"].posture = "Hard"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 9)
        govRoll = 5
        prestigeRolls = (6, 6, 5)
        app.handleRegimeChange("Afghanistan", "track", 6, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_fair())
        self.assertTrue(app.map["Afghanistan"].is_ally())
        self.assertEqual(app.map["Afghanistan"].troops(), 6)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 0)
        self.assertEqual(app.map["Afghanistan"].activeCells, 4)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 1)
        self.assertEqual(app.prestige, 12)
        self.assertEqual(app.troops, 3)

        app = Labyrinth(1, 1, self.set_up_test_scenario)
        app.troops -= 8
        app.map["Pakistan"].changeTroops(8)
        app.map["United States"].posture = "Hard"
        self.assertTrue(app.map["Afghanistan"].is_islamist_rule())
        self.assertTrue(app.map["Afghanistan"].is_adversary())
        self.assertEqual(app.map["Afghanistan"].troops(), 0)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 4)
        self.assertEqual(app.map["Afghanistan"].activeCells, 0)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 0)
        self.assertEqual(app.prestige, 7)
        self.assertEqual(app.troops, 1)
        self.assertEqual(app.map["Pakistan"].troops(), 10)
        govRoll = 5
        prestigeRolls = (6, 6, 5)
        app.handleRegimeChange("Afghanistan", "Pakistan", 7, govRoll, prestigeRolls)
        self.assertTrue(app.map["Afghanistan"].is_fair())
        self.assertTrue(app.map["Afghanistan"].is_ally())
        self.assertEqual(app.map["Afghanistan"].troops(), 7)
        self.assertEqual(app.map["Afghanistan"].sleeperCells, 0)
        self.assertEqual(app.map["Afghanistan"].activeCells, 4)
        self.assertEqual(app.map["Afghanistan"].regimeChange, 1)
        self.assertEqual(app.prestige, 12)
        self.assertEqual(app.troops, 1)
        self.assertEqual(app.map["Pakistan"].troops(), 3)